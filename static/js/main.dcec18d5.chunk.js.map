{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","redux/contacts/selectors.js","redux/contacts/actions.js","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Phonebook/formData.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","redux/contacts/reducer.js","redux/store.js","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","getFilter","store","filter","getFilterList","createSelector","items","contacts","filterItem","toLowerCase","item","name","includes","addToPhonebook","createAction","removeFromPhonebook","filterPhonebook","ContactItem","number","id","dispatch","useDispatch","className","styles","Item","Text","Btn","type","onClick","ContactsList","filterList","useSelector","List","map","FormData","pattern","title","Form","useState","setName","setNumber","nameInputIdRef","useRef","generate","numberInputIdRef","reset","onSubmit","e","preventDefault","isAvailableName","find","contact","isAvailableNumber","alert","action","addToContact","FormContainer","Name","Label","htmlFor","current","Input","required","value","onChange","target","Tel","NameBtn","Filter","Phonebook","container","Title","itemsReducer","createReducer","payload","newContact","push","idx","findIndex","splice","filterReducer","_","combineReducers","configureStore","reducer","contactsReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcec18d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__20k7U\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (store) => store.items;\n\nexport const getFilter = (store) => store.filter;\n\n// const getFilterList = () => {\n//   const filterItem = filter.toLowerCase();\n//   const filterContacts = contacts.filter((item) =>\n//     item?.name?.toLowerCase().includes(filterItem)\n//   );\n//   return filterContacts;\n// };\n\nexport const getFilterList = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const filterItem = filter.toLowerCase();\n    const filterContacts = contacts.filter((item) =>\n      item?.name?.toLowerCase().includes(filterItem)\n    );\n    return filterContacts;\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addToPhonebook = createAction(\"phonebook/add\");\n\nexport const removeFromPhonebook = createAction(\"phonebook/remove\");\n\nexport const filterPhonebook = createAction(\"phonebok/filter\");\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeFromPhonebook } from \"../../redux/contacts/actions\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const removeFromContact = () => {\n    dispatch(removeFromPhonebook(id));\n  };\n  return (\n    <li className={styles.Item}>\n      <p className={styles.Text}>\n        {name} {number}\n      </p>\n      <button className={styles.Btn} type=\"button\" onClick={removeFromContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getFilterList } from \"../../redux/contacts/selectors\";\nimport ContactItem from \"./ContactItem\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = () => {\n  const filterList = useSelector(getFilterList);\n\n  return (\n    <>\n      <ul className={styles.List}>\n        {filterList.map(({ name, number, id }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","const FormData = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: \"tel\",\n    name: \"number\",\n    pattern:\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default FormData;\n","import React, { useRef } from \"react\";\nimport { generate } from \"shortid\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport FormData from \"../Phonebook/formData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToPhonebook } from \"../../redux/contacts/actions\";\n\nconst Form = () => {\n  const contacts = useSelector((store) => store.items);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputIdRef = useRef(generate());\n  const numberInputIdRef = useRef(generate());\n\n  const addToContact = () => {\n    const isAvailableName = contacts.find((contact) => contact.name === name);\n    const isAvailableNumber = contacts.find(\n      (contact) => contact.number === number\n    );\n    if (isAvailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (isAvailableNumber) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n    const action = addToPhonebook({ name, number });\n    dispatch(action);\n  };\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const changeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addToContact();\n    // onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <div className={styles.FormContainer}>\n        <div className={styles.Name}>\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\n            Name\n            <input\n              {...FormData.name}\n              className={styles.Input}\n              required\n              value={name}\n              onChange={changeName}\n              id={nameInputIdRef.current}\n            />\n          </label>\n        </div>\n        <div className={styles.Tel}>\n          <label className={styles.Label} htmlFor={numberInputIdRef.current}>\n            Number\n            <input\n              {...FormData.number}\n              className={styles.Input}\n              required\n              value={number}\n              onChange={changeNumber}\n              id={numberInputIdRef.current}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className={styles.NameBtn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   nameInputId = generate();\n//   numberInputId = generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     const { handleSubmit, handleChange } = this;\n//     return (\n//       <form className={styles.Form} onSubmit={handleSubmit}>\n//         <div className={styles.FormContainer}>\n//           <div className={styles.Name}>\n//             <label className={styles.Label} htmlFor={this.nameInputId}>\n//               Name\n//               <input\n//                 {...FormData.name}\n//                 className={styles.Input}\n//                 required\n//                 value={name}\n//                 onChange={handleChange}\n//                 id={this.nameInputId}\n//               />\n//             </label>\n//           </div>\n//           <div className={styles.Tel}>\n//             <label className={styles.Label} htmlFor={this.numberInputId}>\n//               Number\n//               <input\n//                 {...FormData.number}\n//                 className={styles.Input}\n//                 required\n//                 value={number}\n//                 onChange={handleChange}\n//                 id={this.numberInputId}\n//               />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className={styles.NameBtn}>\n//             Add contact\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterPhonebook } from \"../../redux/contacts/actions\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = ({ target }) => {\n    dispatch(filterPhonebook(target.value));\n  };\n  return (\n    <>\n      <input\n        className={styles.Input}\n        onChange={onChange}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styles from \"./Phonebook.module.css\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport FormMain from \"../Form/Form\";\nimport Filter from \"../Filter/Filter\";\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.Title}>Phonebook</h2>\n      <FormMain />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addToPhonebook,\n  removeFromPhonebook,\n  filterPhonebook,\n} from \"./actions\";\nimport { generate } from \"shortid\";\nimport { combineReducers } from \"redux\";\n\nconst itemsReducer = createReducer([], {\n  [addToPhonebook]: (store, { payload }) => {\n    const newContact = { ...payload, id: generate() };\n    store.push(newContact);\n  },\n  [removeFromPhonebook]: (store, { payload }) => {\n    const idx = store.findIndex(({ id }) => id === payload);\n    store.splice(idx, 1);\n  },\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterPhonebook]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\n// const initialState = {\n//   contacts: {\n//     items: [],\n//     filter: \"\",\n//   },\n// };\n\n// const itemsReducer = (\n//   store = initialState.contacts.items,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.ADD_TO_PHONEBOOK:\n//       const newContact = { ...payload, id: generate() };\n//       return [...store, newContact];\n\n//     case types.REMOVE_FROM_PHONEBOOK:\n//       const updateContacts = store.filter((item) => item.id !== payload);\n//       return updateContacts;\n\n//     default:\n//       return store;\n//   }\n// };\n\n// const filterReducer = (\n//   store = initialState.contacts.filter,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.FILTER_PHONEBOOK:\n//       return payload;\n\n//     default:\n//       return store;\n//   }\n// };\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport contactsReducer from \"./contacts/reducer\";\n\nconst store = configureStore({\n  reducer: contactsReducer,\n});\n\nexport default store;\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Phonebook />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Form_Label__3QBfK\",\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"NameBtn\":\"Form_NameBtn__1jr4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__3c0bw\",\"List\":\"ContactsList_List__1UAk9\",\"Text\":\"ContactsList_Text__2cDL5\",\"Btn\":\"ContactsList_Btn__GB_5Z\"};"],"sourceRoot":""}